#include <bits/stdc++.h>

using namespace std;

const int oo = 1e18;
const int MAXN = 4e3;
int n, k; 
vector<int> v(MAXN);
vector<int> divi;

int main() {
	cin.tie(0)->sync_with_stdio(false);

	int t; cin >> t; while(t--) {
		cin >> n >> k;
		for(int i = 0; i < n; i++)
			cin >> v[i];
	
		int mx = *max_element(begin(v), end(v)), mn = *min_element(begin(v), end(v));

		if(k*2 > *max_element(begin(v), end(v))) {
			cout << 0 << endl;
			continue;
		}

		divi.clear();
		for(int i = 1; i <= k; i++) {
			if(divi.empty() || divi.back() != v[0]/i) divi.push_back(v[0]/i);
		}

		int ans = oo;
		for(auto l: divi) {
			int cur = 0;
			for(int i = 1; i < n; i++) {
				int el = v[i]/l;

				if(el > k)
					cur = oo;
				else
					cur = max(cur, el*v[i]);


			}
			ans = min(ans, cur-l+1);
		}

		cout << ans << endl;
	}

}
